name: Build Android APK

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # --- Install essential tools ---
      - name: Install essential tools
        run: |
          sudo apt update
          sudo apt install -y tar gzip unzip wget curl python3-dev zip build-essential \
            autoconf automake libtool pkg-config git default-jdk zlib1g-dev

      # --- Checkout repo ---
      - name: Checkout code
        uses: actions/checkout@v4

      # --- Setup Python 3.10 ---
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # --- Cache pip packages ---
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # --- Install Python dependencies ---
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install cython
          pip install buildozer==1.5.0 kivy==2.2.1
          pip install -r requirements.txt || true

      # --- Install Android SDK command-line tools ---
      - name: Install Android SDK command-line tools
        run: |
          mkdir -p $HOME/android-sdk/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmdline-tools.zip
          unzip -q cmdline-tools.zip -d $HOME/android-sdk/cmdline-tools
          mv $HOME/android-sdk/cmdline-tools/cmdline-tools $HOME/android-sdk/cmdline-tools/latest
          export ANDROID_SDK_ROOT=$HOME/android-sdk
          export ANDROID_HOME=$HOME/android-sdk
          export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:$PATH

          # Accept licenses non-interactively
          mkdir -p $ANDROID_HOME/licenses
          echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" > $ANDROID_HOME/licenses/android-sdk-license
          echo "84831b9409646a918e30573bab4c9c91346d8abd" >> $ANDROID_HOME/licenses/android-sdk-license
          echo "d56f5187479451eabf01fb78af6dfcb131a6481e" >> $ANDROID_HOME/licenses/android-sdk-license

          # Install required SDK packages
          sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.2"

      # --- Set Buildozer SDK/NDK path ---
      - name: Set Buildozer SDK/NDK path
        run: |
          sed -i '/^android.sdk_path/d' buildozer.spec || true
          sed -i '/^android.ndk_path/d' buildozer.spec || true
          echo "android.sdk_path = $HOME/android-sdk" >> buildozer.spec
          echo "android.ndk_path = $HOME/android-sdk/ndk-bundle" >> buildozer.spec

      # --- Build APK ---
      - name: Build APK
        run: |
          export ANDROID_SDK_ROOT=$HOME/android-sdk
          export ANDROID_HOME=$HOME/android-sdk
          export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:$PATH
          buildozer android debug
          ls bin/

      # --- Upload APK as artifact ---
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: LANCastReceiver-APK
          path: bin/*.apk
